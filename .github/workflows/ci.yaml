name: Rust Client

on:
  push: 
    branches:
      - main
      - develop
  pull_request:

jobs:
  FetchPackages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ env.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - id: set-matrix
        run: echo "matrix=$(./scripts/fetch_packages.sh)" >> $GITHUB_ENV

      - run: mkdir -p ./coverage

      - run: touch ./coverage/.init
      
      - uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage/

  FetchTestCases:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          repository: polywrap/wasm-test-harness
          ref: v0.1.1

      - uses: actions/upload-artifact@v3
        with:
          name: wrappers
          path: ./wrappers

  Test:
    runs-on: ubuntu-latest
    needs:
      - FetchPackages
      - FetchTestCases
    strategy:
      matrix: ${{fromJSON(needs.FetchPackages.outputs.matrix)}}
    defaults:
      run:
        working-directory: ./packages/${{ matrix.package }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Install grcov
        run: cargo install grcov

      - name: Instal llvm-tools
        run: rustup component add llvm-tools-preview

      - uses: actions/download-artifact@v3
        with:
          name: wrappers
          path: ./packages/tests-utils/cases

      - uses: actions-rs/cargo@v1
        with:
          command: test
        env:
          CARGO_INCREMENTAL: '0'
          RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
          RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'

      - uses: actions/download-artifact@v3
        with:
          name: coverage
          path: ./coverage

      - name: Get coverage
        run: grcov ../.. -s ../.. --binary-path ../../target/debug -o ../../coverage/${{ matrix.package }}.info

      - name: Save coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: ./coverage/

  UploadCoverage:
    runs-on: ubuntu-latest
    needs:
      - Test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: coverage
          path: ./coverage/

      - name: Upload coverage to codecov
        uses: codecov/codecov-action@v3
        with:
          files: client.info, core.info, manifest.info, msgpack.info, wasm.info, resolvers.info